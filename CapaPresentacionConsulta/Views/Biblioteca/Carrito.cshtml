@{
    ViewBag.Title = "Carrito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="rov">
        <div class="col-sm-12 ">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <!--Detalle del Libro-->
                        <div class="col-sm-12 col-sm-12 col-md-9">
                            <div class="me-2">
                                <div class="d-flex justify-content-between">
                                    <h5 class="ms-2 mt-2">Detalle Carrito</h5> @*redirige a la vista de inicio*@
                                    <a class="btn btn-success" href="@Url.Action("Index","Biblioteca")"><i class="fas fa-cart-plus"></i> Seguir Consultando</a>
                                </div>
                                <hr class="mt-2 mb-2" />
                                <div id="LibrosCarrito" class="col-12 col-md-12">
                                    <div class="card mb-2 card-Libro ">
                                        <div class="card-body row-libro">

                                            <div class="row">
                                                <div class="col-sm-2 align-self-center d-flex justify-content-center">
                                                    @*para visualizar la imagen del Libro*@
                                                <img class="rounded" src="https://dummyimage.com/450x300/dee2e6/6c757d.jpg" style="width:100px; height:100px" />

                                            </div>

                                            <div class="col-sm-4 align-self-center">
                                                @*para visualizar la marca del Libro*@
                                                <span class="font-wight-bold d-block">Categoria</span>
                                                <span>Título del Libro</span>
                                            </div>

                                            <div class="col-sm-1 align-self-center">
                                                @*para visualizar el precio del Libro*@
                                                <span>Cantidad: 0</span>
                                            </div>

                                            <!--<div class="col-sm-2 align-self-center">--> @*para aumentar la cantidad del Libro*@
                                            <!--<div class="d-flex">
                                                <button class="btn btn-outline-secondary btn-restar rounded-0">
                                                    <i class="fas fa-minus"></i>
                                                </button>-->
                                            @*boton de restar*@

                                            <!--<input class="form-control input-cantidad p-1 text-center rounded-0" disabled style="width:40px" />-->@*para visualizar la cantidad de Libros*@

                                            <!--<button class="btn btn-outline-secondary btn-sumar rounded-0">
                                                <i class="fas fa-plus"></i>
                                            </button>-->
                                            @*boton de sumar*@
                                            <!--</div>
                                            </div>-->
                                            @*<div class="mb-2">
                                                    <label for="cmbProvincia" class="form-label">Provincia (Municipio): </label>
                                                    <select class="form-select form-select-sm" id="cmbProvincia"></select>
                                                </div>*@
                                            <div class="col-sm-3 mt-2">
                                                <label for="cbocategoria" class="form-label">Ejemplares disponibles:</label>
                                                <select id="cbocategoria" class="form-select" name="categoria">
                                                </select>
                                            </div>
                                            <div class="col-sm-2 align-self-center mt-2">
                                                @*para visualizar el precio del Libro*@
                                                <button class="btn btn-outline-danger btn-eliminar"><i class="fas fa-trash-alt"></i> Eliminar</button> @*boton de eliminar*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex justify-content-end">
                                <label class="align-self-center"><b>Total de Ejemplares: <span id="total">0</span></b></label>
                            </div>
                        </div>
                    </div>

                    <!--Detalle de Envio-->
                    <div class="col-sm-4 col-sm-12 col-md-3 mt-sm-1 mt-md-0">
                        <div class="card">
                            <div class="card-body bg-light">
                                <h5 class="card-title">Detalle Préstamo</h5>
                                <form>
                                    <div class="mb-2">
                                        <label for="txtDiasPrestamo" class="form-label">DÍas de Préstamo: </label>
                                        <input type="number" class="form-control form-control-sm" id="txtDiasPrestamo" value="7" autocomplete="off">
                                    </div>
                                    <div class="mb-2">
                                        <label for="txtObservaciones" class="form-label">Observaciones: </label>
                                        <input type="text" class="form-control form-control-sm" id="txtObservaciones" value="NINGUNA" autocomplete="off">
                                    </div>
                                    <div class="d-grid">
                                        <button class="btn btn-success" type="button" onclick="RealizarPrestamo()">
                                            <i class="fas fa-check-circle"></i> Realizar Préstamo
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            responsive: true
            MostrarCarrito();
        })

        function MostrarCarrito() {
            jQuery.ajax({
                url: '@Url.Action("ListarLibrosCarrito", "Biblioteca")',
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {//una lista dentro de data
                    $("#LibrosCarrito").html("");
                    $("#LibrosCarrito").LoadingOverlay("hide");

                    $.each(response.data, function (i, item) {
                        /* console.log(i);*/
                        //MostrarListaCategorias();
                        $("<div>").addClass("card mb-2 card-Libro").append(

                            $("<div>").addClass("card-body row-libro").append(
                                $("<div>").addClass("row ").append(
                                    //1
                                    //$("<div>").addClass("col-sm-2 align-self-center d-flex justify-content-center").append(
                                    $("<div>").addClass("col-12 col-sm-2 col-md-2 align-self-center d-flex justify-content-center").append(
                                        $("<img>").addClass("rounded").attr({ "src": "data:image/" + item.oId_Libro.Extension + ";base64," + item.oId_Libro.Base64 })
                                            .css({ "width": "100%", "height": "auto" })
                                    ),
                                    //2
                                    $("<div>").addClass("col-12  col-sm-4 align-self-center").append(

                                        //$("<span>").addClass("font-wight-bold d-block").text("Ejemplares: " + item.oId_Libro.oId_Ejemplar.IdEjemplarLibro),
                                        $("<span>").addClass("font-wight-bold d-block span-descripcion").text("Código: " + item.oId_Libro.Codigo).val(item.oId_Libro.IdLibro),
                                        $("<span>").text("Título: " + item.oId_Libro.Titulo),
                                        //$("<span>").addClass("font-wight-bold d-block idLibro-de-descripcion").text("IdLibro: "+item.oId_Libro.IdLibro).val(item.oId_Libro.IdLibro)
                                    ),
                                    //3
                                    $("<div>").addClass("col-sm-1 align-self-center").append(
                                        //$("<span>").text("$" + item.oId_Libro.Ejemplares.toFixed(2))
                                        $("<span>").addClass("span-cantidad").text(item.Cantidad)
                                            .data("oId_Libro", item.oId_Libro)
                                            .val(item.Cantidad),
                                    ),
                                    $('<div>').addClass('col-12 col-sm-5 col-md-3 align-self-center mb-4 d-flexE').append(
                                        $('<label>').addClass('form-label').text('Ejemplar disponible: '),
                                        //El input se coloca como hidden para que no se vea en el diseño
                                        //$("<span>").addClass("font-wight-bold d-block").text("Ejemplar ID: " + item.oId_Libro.oId_Ejemplar.IdEjemplarLibro),
                                        $("<button>").addClass("col-12 btn btn-outline-dark text-center").attr({  }).text("Ejemplar: " + item.oId_Libro.oId_Ejemplar.IdEjemplarLibro),

                                        //Este input siguiente (input-ejemplar) fue la primera prueba para listar ejemplares, su metodo
                                        //es el evento focus, a este btn-select, cuando se hace focus, lista la editorial, fue la forma de listar externamente dentro
                                        //de cada tipo de libro (ya despues se mejoró listando directamente en el libro un ejemplar, por ello comentamos estas lineas)
                                        //$("<input>").addClass("form-control input-ejemplar p-1 text-center rounded-0").attr({ "type": "hidden", "disabled": "disabled" })
                                        //    .css({ "width": "40px" })
                                        //    .data("oId_Libro", item.oId_Libro)
                                        //    .val(item.oId_Libro.IdLibro),//almacena esta informacion dentro de la etiqueta
                                        //$('<select>').addClass('form-select btn-select').attr({ 'name': 'ejemplar' }).append(
                                        //$("<option>").attr({ "value": "00", "disabled": "disabled", "selected": "true" }).text("Seleccionar"))

                                    ),
                                    //3

                                    //5
                                    $("<div>").addClass("col-sm-2 col-sm-12 col-md-2 align-self-center d-flex justify-content-end mt-md-2 mt-sm-2").append(

                                        $("<button>").addClass("col-12 btn btn-outline-danger btn-eliminar").append($("<i>").addClass("fas fa-trash-alt"), " Eliminar")
                                            .data("IdLibro", item.oId_Libro.IdLibro)
                                    )
                                    //6

                                )
                            )
                        ).appendTo("#LibrosCarrito")

                    })
                    sumarTotal();
                    //hola2();
                    //MostrarListaEjemplares()
                    //ListarEjemplar();
                },
                error: function (error) {
                    $("#LibrosCarrito").LoadingOverlay("hide");
                },
                beforeSend: function () {
                    $("#LibrosCarrito").LoadingOverlay("show");

                }
            })

        }
        //Esto es para aumentar el total de Libros y actualizar la suma total de los precios de esos Libros actuales en el carrito
        @*$(document).on("focus", ".btn-select", function () {
            //btn-sumar viene de la clase del diseño script de arriba

            $(".btn-select").html("")//Para poder iniciar desde 0 lo limpiamos de esta forma*/
            //Aqui se colocan los atributos de html y opciones de valor, text, etc
            $("<option>").attr({ "value": "00", "disabled": "disabled", "selected": "true" }).text("Seleccionar").appendTo(".btn-select")
                var divContenedor = $(this).parent("div.d-flexE");//encuentra un control superior a este que es un div con la clase d-flexE

                var inputEjemplar = $(divContenedor).find("input.input-ejemplar");//encuentra un input con esa clase, obtiene el input cantidad

                var btn = $(this);

                var idLibro = $(inputEjemplar).data("oId_Libro").IdLibro;//recordemos que el inputCantidad tiene data donde esta el idLibro

                jQuery.ajax({
                    url: '@Url.Action("ListarEjemplarLibro", "Biblioteca")',
                    type: "POST",
                    //como se va a sumar colocamos true, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                    data: JSON.stringify({ idLibro: idLibro}),//pasamos los parametros que necesita este metodo
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        $(btn).LoadingOverlay("hide")
                        if (data.lista != null) {
                            //$(".btn-select").html("")//Para poder iniciar desde 0 lo limpiamos de esta forma
                            $.each(data.lista, function (i, item) {

                                $("<option>").attr({"name":"ejemlibro" ,"value": item.IdEjemplarLibro }).text("Ejemplar: " + item.IdEjemplarLibro).appendTo(".btn-select")
                            })
                            //$.each(data.lista, function (key, value) {
                            //    //$("<option>").attr({ "value": "00", "disabled": "disabled", "selected": "true" }).text("Seleccionar").appendTo(".select-ejemplares"),
                            //    // Agregamos una opción por cada fila devuelta
                            //    options += '<option value="' + value.IdEjemplarLibro + '">' + "Ejemplar del libro con ID:" + value.IdLibro + ", " + value.IdEjemplarLibro + '</option>';
                            //});
                            //$('.btn-select').append(options);
                            console.log(idLibro)
                            //ListarDistrito();

                        }
                    },
                    beforeSend: function () {
                        $(btn).LoadingOverlay("show")
                    },
                    error: function (error) {
                        $(btn).LoadingOverlay("hide")
                    }
                })

        })*@
        //$(document).on("change", ".btn-select", function () {
        //    var ejemID = $("option[name=ejemlibro]").val();
        //    console.log(ejemID);
        //    console.log("hola");
        //})

        function sumarTotal() {//La suma total del precio de los Libros
            var sumaTotal = parseFloat(0) //Va a empezar con el valor de 0
            $("span.span-cantidad").each(function (i) {
                //var precio = $(this).data("oId_Libro").IdLibro;
                //var variable = 1;
                var cantidad = $(this).val()

                var subTotal = 1 * cantidad;

                sumaTotal += subTotal; //Va a sumar con el subtotal
            })//input-cantidad esta declarada en el script para diseño y se trae la data que es la cantidad del Libro
            $("#total").text(sumaTotal)//va a mostrar la suma total pero con dos decimales
            $("#total").data("sumaTotal", sumaTotal)//Se le pasa toda la sumaTotal pero sin ninguno conversion para poder enviarlo mas adelante a la base de datos
        }

        //Esto es para aumentar el total de Libros y actualizar la suma total de los precios de esos Libros actuales en el carrito
        @*$(document).on("click", ".btn-sumar", function () {//btn-sumar viene de la clase del diseño script de arriba

                var divContenedor = $(this).parent("div.d-flex");//encuentra un control superior a este que es un div con la clase d-flex

                var inputCantidad = $(divContenedor).find("input.input-cantidad");//encuentra un input con esa clase, obtiene el input cantidad

                var btn = $(this);

                var idLibro = $(inputCantidad).data("oId_Libro").IdLibro;//recordemos que el inputCantidad tiene data donde esta el idLibro

                jQuery.ajax({
                    url: '@Url.Action("OperacionCarrito", "Biblioteca")',
                    type: "POST",
                    //como se va a sumar colocamos true, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                    data: JSON.stringify({ idLibro: idLibro, sumar:true }),//pasamos los parametros que necesita este metodo
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        $(btn).LoadingOverlay("hide")
                        if (data.respuesta) {//si la respuesta es true
                            var cantidad = parseInt($(inputCantidad).val()) + 1;//retorna el valor de inputCantidad en entero
                            $(inputCantidad).val(cantidad)//Ahora la caja de texto tendrá un nuevo valor y sera la cantidad ya sumada 1+1 o 2+1, etc.
                            sumarTotal();//vuelve a sumar total de los valores, actualiza el precio final
                        } else {
                            swal("", data.mensaje, "warning")
                        }
                    },
                    beforeSend: function () {
                        $(btn).LoadingOverlay("show")
                    },
                    error: function (error) {
                        $(btn).LoadingOverlay("hide")
                    }
                })

        })*@

        //Esto es para restar el total de Libros y actualizar la resta total de los precios de esos Libros actuales en el carrito
        @*$(document).on("click", ".btn-restar", function () {//btn-sumar viene de la clase del diseño script de arriba

                var divContenedor = $(this).parent("div.d-flex");//encuentra un control superior a este que es un div con la clase d-flex

                var inputCantidad = $(divContenedor).find("input.input-cantidad");//encuentra un input con esa clase, obtiene el input cantidad

                var btn = $(this);

                var idLibro = $(inputCantidad).data("oId_Libro").IdLibro;//recordemos que el inputCantidad tiene data donde esta el idLibro
                var cantidad = parseInt($(inputCantidad).val()) - 1;//retorna el valor de inputCantidad en entero

                if (cantidad >= 1) {//No debe ser 0 la cantidad en carrito o no tendria sentido
                    jQuery.ajax({
                        url: '@Url.Action("OperacionCarrito", "Biblioteca")',
                        type: "POST",
                        //como se va a restar colocamos false, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                        data: JSON.stringify({ idLibro: idLibro, sumar:false }),//pasamos los parametros que necesita este metodo
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {

                            $(btn).LoadingOverlay("hide")
                            if (data.respuesta) {//si la respuesta es true

                                $(inputCantidad).val(cantidad)//Ahora la caja de texto tendrá un nuevo valor y sera la cantidad ya sumada 1+1 o 2+1, etc.
                                sumarTotal();//vuelve a sumar total de los valores, actualiza el precio final
                            } else {
                                swal("", data.mensaje, "warning")
                            }
                        },
                        beforeSend: function () {
                            $(btn).LoadingOverlay("show")
                        },
                        error: function (error) {
                            $(btn).LoadingOverlay("hide")
                        }
                    })
                }
        })*@
        //Eliminar del carrito
        $(document).on("click", ".btn-eliminar", function () {//btn-sumar viene de la clase del diseño script de arriba

            var idLibro = $(this).data("IdLibro");//recordemos que el inputCantidad tiene data donde esta el idLibro
            //el div.card-Libro es el contenedor todo este div que pertenezca (this) al boton que hemos presionado eliminar, será eliminado
            var cardLibro = $(this).parents("div.card-Libro");//Parents para que Pueda obtener todas las etiquetas a un nivel superior

            jQuery.ajax({
                url: '@Url.Action("EliminarCarrito", "Biblioteca")',
                type: "POST",
                //como se va a restar colocamos false, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                data: JSON.stringify({ idLibro: idLibro}),//pasamos los parametros que necesita este metodo
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    if (data.respuesta) {//si la respuesta es true
                        cardLibro.remove();//elimina el contenedor
                        MostrarCantidadCarrito();//vuelve a mostrar la vista de carrito
                        sumarTotal();//actualiza la suma total
                    } else {
                        swal("", data.mensaje, "warning")
                    }
                }
            })
        })


        function RealizarPrestamo() {
            if (parseInt($("#cantidadCarrito").text()) == 0) {//Si la cantidad en carrito es igual a 0
                swal("", "No existen Libros en el carrito", "warning");
                return
            }
            if ($("#txtDiasPrestamo").val() == null || $("#txtObservaciones").val() == "") {
                swal("", "Debe completar los datos de\ndetalle de Préstamo", "warning");
                return
            }
            var Prestamo = {
                //TotalLibro: $("input.input-cantidad").length,
                TotalLibro: $("span.span-cantidad").length,
                //MontoTotal: 0,
                DiasDePrestamo: $("#txtDiasPrestamo").val(),
                Observaciones: $("#txtObservaciones").val()
            }

            var listaCarrito = [];//Por defecto esta lista estará vacia

            $("span.span-cantidad").each(function () {//Se hará un recorrido a todos los controllers con estas caracteristicas

                var Libro = $(this).data("oId_Libro");
                //var Libro = $("span.span-ejemplar").data("oId_Ejemplar2");
                //var Libro = $("span.span-ejemplar").val()
                var cantidad = $(this).val()

                listaCarrito.push({//para agregar elementos a esta lisra
                    oId_Libro: Libro,//Aqui tengo que darle el idEJEMPLAR

                    Cantidad: cantidad
                })
            })

            jQuery.ajax({
                url: '@Url.Action("ProcesarPrestamo", "Biblioteca")',
                type: "POST",
                //como se va a restar colocamos false, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                //pasamos la lista carrito creada  los datos de la Prestamo
                data: JSON.stringify({ oListaCarrito: listaCarrito, oPrestamo: Prestamo }),
                //pasamos los parametros que necesita este metodo
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.LoadingOverlay("hide")
                    if (data.Status) {//si la respuesta es true
                        window.location.href = data.Link//url que proporciona paypal para realizar el pago
                        //var jsonResult = data.Response;//Respuesta de la ejecucion del metodo procesar pago

                        //console.log(jsonResult);

                        //var links = jsonResult.links;

                        //var resultado = links.find(item => item.rel === "approve")

                        //window.location.href = resultado.href//url que proporciona paypal para realizar el pago
                    } else {
                        //swal("", data.mensaje, "warning");
                        swal({
                            title:  "El ejemplar ya fué prestado a otro lector",
                            text: data.mensaje + "\n¿Volver a la Biblioteca?",
                            type: "error",
                            showCancelButton: true,
                            confirmButtonClass: "btn-primary",
                            confirmButtonText: "Si",
                            cancelButtonText: "No",
                            closeOnConfirm: true
                            
                        }, function (isConfirm) {
                            if (isConfirm) {
                                window.location.href = '@Url.Action("Index","Biblioteca")';
                            } else {
                                location.reload();
                            }
                        })
                    }
                },
                beforeSend: function () { $.LoadingOverlay("show") },//mientras este ejecutando las operaciones
                error: function (error) { $.LoadingOverlay("hide") }

            })

        }
        @* function RealizarPago() {
            if (parseInt($("#cantidadCarrito").text()) == 0) {//Si la cantidad en carrito es igual a 0
                swal("", "No existen Libros en el carrito", "warning");
                return
            }
            if ($("#cmbDistrito").val() == null || $("#txtNombreContacto").val() == "" || $("#txtDireccion").val() == "" || $("#txtTelefono").val() == "") {
                swal("", "Debe completar los datos de\ndetalle de Préstamo", "warning");
                return
            }
            var venta = {
                TotalLibro: $("input.input-cantidad").length,
                MontoTotal: 0,
                Contacto: $("#txtNombreContacto").val(),
                IdDistrito: $("#cmbDistrito").val(),//Solo se pide distrito porque para que este exista antes ya debemos haber pasado el departamento y provincia
                Telefono: $("#txtTelefono").val(),
                Direccion: $("#txtDireccion").val()
            }

            var listaCarrito = [];//Por defecto esta lista estará vacia

            $("input.input-cantidad").each(function () {//Se hará un recorrido a todos los controllers con estas caracteristicas

                var Libro = $(this).data("oId_Libro");
                var cantidad = parseFloat($(this).val())

                listaCarrito.push({//para agregar elementos a esta lisra
                    oId_Libro: Libro,
                    Cantidad: cantidad
                })
            })

            jQuery.ajax({
                url: '@Url.Action("ProcesarPago", "Biblioteca")',
                type: "POST",
                //como se va a restar colocamos false, el idLibro es el parametro declarado (tal cual) en el metodo OperacionCarrito
                //pasamos la lista carrito creada  los datos de la venta
                data: JSON.stringify({ oListaCarrito: listaCarrito, oVenta: venta }),
                //pasamos los parametros que necesita este metodo
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.LoadingOverlay("hide")
                    if (data.Status) {//si la respuesta es true

                        var jsonResult = data.Response;//Respuesta de la ejecucion del metodo procesar pago

                        console.log(jsonResult);

                        var links = jsonResult.links;

                        var resultado = links.find(item => item.rel === "approve")

                        window.location.href = resultado.href//url que proporciona paypal para realizar el pago
                    } else {
                        swal("", "Vuelva a intentarlo más tarde", "warning");
                    }
                },
                beforeSend: function () { $.LoadingOverlay("show") },//mientras este ejecutando las operaciones
                error: function (error) { $.LoadingOverlay("hide") }

            }) *@
        //}
    </script>
}

