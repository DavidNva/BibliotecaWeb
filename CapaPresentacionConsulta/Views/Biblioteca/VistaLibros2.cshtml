
@{
    ViewBag.Title = "VistaLibros2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>VistaLibros2</h2>

<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="#">Resumen</a></li>
    <li class="breadcrumb-item active">Libros</li>
</ol>
<div class="card">
    <div class="card-header">

        <i class="fas fa-book me-1"></i>Lista de Libros
    </div>
    <div class="card-body">
        @*boostrap es como manejar una hoja en excel*@
        <div class="row">
            <div class="col-12">
                @*numero de filas*@
                <button type="button" class="btn btn-success" onclick="abrirModal()">Crear Nuevo</button>
            </div>
        </div>
        <hr /> @*el id es para identificar la tabla*@
        <table id="tabla" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>Num</th>
                    <th>Código</th>
                    <th>Título</th>
                    @*<th>Ubicación</th>*@
                    <th>Pág</th>
                    <th>Categoría</th>
                    <th>Editorial</th>
                    <th>Sala</th>
                    <th>Activo</th>
                    <th>Stock</th>
                    <th>Volumen</th>
                    <th>Año de Edición</th>
                    <th>Observaciones</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarLibro llamada en el HomeControler*@

            </tbody>
        </table>

    </div>

</div>


@section scripts{
    <script>
        var tabladata;
        var filaSeleccionada;/*Son variables globales para se usada por lo que este dentro */
        //el hastash significa que se refiere a un id, entonces llama o igual la variable a una tabla declarada
        //anteriormente en el html de arriba con id que se llama tabla
        tabladata = $("#tabla").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarLibro","Mantenedor")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Home cuando igualamos en el jsnundata
                 y el seguno valor es como se llama la columna*/
                { "data": "IdLibro" },
                { "data": "Codigo" },
                { "data": "Titulo" },
                { "data": "Paginas" },
                {
                    "data": "oId_Categoria", "render": function (data) {
                        return data.Descripcion
                    }
                },
                {
                    "data": "oId_Editorial", "render": function (data) {
                        return data.Descripcion
                    }
                },
                {
                    "data": "oId_Sala", "render": function (data) {
                        return data.Descripcion
                    }
                },
                {
                    "data": "Activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                { "data": "Ejemplares" },
                { "data": "Volumen" },
                { "data": "AñoEdicion" },

                { "data": "Observaciones" },

                {
                    "data": "IdLibro", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editar btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminar btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML;

                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }
                //{/*Crea una columna por defecto*/
                //    /*El btn-promary es el diseño, el btn-sm es el mamaño*/
                //    "defaultContent": ' <button type="button" class="btn btn-primary btn-sm btn-editar"><i class="fas fa-pen"></i></button>' +
                //        '<button type="button" class="btn btn-danger btn-sm ms-2"><i class="fas fa-trash btn-eliminar"></i></button>',
                //    "orderable": false,/*Que no sea ordenada, porque solo contiene botones*/
                //    "searchable": false, /*Para que no haga la busqueda por estos botones de editar y eliminar, solo de las demas columnas*/
                //    "width": "90px"
                //}
            ],/*Propiedad o atributos van dentro de las comillas ""*/
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json"
            }

        });

       



        /*Estamos llamando a la tabla especificamente al tbody, todo ira en relacion a esa tabla*/
        $("#tabla tbody").on("click", '.btn-editar', function () {
            /*This es la misma tabla, se llama
             tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");
            var data = tabladata.row(filaSeleccionada).data();

            //console.log(data);/*Para visualizar en consola*/
            //abrirModal(data);
            //var json = $(this).data("informacion")
            //console.log(json);
            var json = $(this).data("informacion")
            abrirModal(json)

        })
        /*Tambien lo podemos hacer de esta forma*/
        //$(document).on('click', '.btn-editar', function (event) {
        //    var json = $(this).data("informacion")

        //    abrirModal(json)
        //});
        $("#tabla tbody").on("click", '.btn-eliminar', function () {

            //var Libroseleccionado = $(this).closest("tr");
            //console.log(Libroseleccionado)

            var json = $(this).data("informacion")
            //var idLibro = json.IdLibro
            //console.log(json.IdLibro);
            //console.log(data);
            //if (typeof json !== "undefined" && json !== null) {
            //    // Ahora puedes acceder a las propiedades de data de forma segura
            //    var id = json.IdLibro;
            //    // resto del código aquí
            //} else {
            //    console.log("La variable data es undefined o null");
            //}
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar el Libro?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {
                jQuery.ajax({
                    url: '@Url.Action("EliminarLibro", "Mantenedor")',
                    type: "POST",
                    data: JSON.stringify({ id:json.IdLibro }),/*Paso de valores*/
                    /*el stringfy lo convierte a texto*/
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar Libro
                     * hecho en homeController*/
                        //ELIMINAR Libro

                        if (data.resultado) { /*si el resultado es verdadera)*/
                            //tabladata.row(Libroseleccionado).remove().draw();
                            tabladata.ajax.reload();
                        }else {
                            swal("No se pudo eliminar", data.mensaje, "error")
                        }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                    },
                    error: function (error) {
                        console.log(error)
                    }

                });
            });

            //console.log(data);


        })


    </script>
}
