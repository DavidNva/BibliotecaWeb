
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Header-->
<header class="bg-principal-lector py-5">
    <div class="container px-4 px-lg-5 my-5">
        <div class="text-center text-white">
            <h1 class="display-4 fw-bolder">Biblioteca Luis Cabrera Lobato</h1>
            <p class="lead fw-normal text-white-50 mb-0">Bibliotecas CuboRubikCode</p>
        </div>
    </div>
</header>
<!-- Section-->
<section>
    <div class="container-fluid px-5 my-5">

        <div class="row">
            <div class="col-sm-3">
                <div class="row mb-3">
                    @*para categorias*@
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-header bg-success text-white">
                                Categorias
                            </div>
                            <div id="contenedorCategoria" class="card-body">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    @*para Editoriales*@
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-header bg-success text-white">
                                Editoriales
                            </div>
                            <div id="contenedorEditorial" class="card-body">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    @*boton de filtrar*@
                    <div class="col-sm-12">
                        <div class="d-grid gap-2">
                            <button id="btnAplicarFiltro" class="btn btn-outline-dark btn-block" type="button">
                                <i class="fas fa-filter"></i>Aplicar filtros
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-9">
                <!-- Crea la barra de navegación con las pestañas -->
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" title="Ver lista de libros" id="vista1-tab" data-toggle="tab" href="#TablaLibros" role="tab" aria-controls="vista1" aria-selected="true">Ver libros <i class="fa fa-table"></i></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" title="Ver lista de libros con imagen" id="vista2-tab" data-toggle="tab" href="#LibrosImage" role="tab" aria-controls="vista2" aria-selected="false">Ver libros <i class="fa fa-image"></i></a>
                    </li>
                </ul>

                <!-- Crea el contenido de las pestañas -->
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="TablaLibros" role="tabpanel" aria-labelledby="vista1-tab">
                        @*<h2>Vista 1</h2>*@
                        <p></p>

                        <hr />
                        @*el id es para identificar la tabla*@
                        <table id="tabla" class="display cell-border" style="width:100%">
                            <thead>
                                <tr>
                                    <th></th>
                                    @*<th>Código</th>*@
                                    <th>Título</th>
                                    @*<th>Ubicación</th>*@
                                    <th>Pág</th>
                                    <th>Categoría</th>
                                    <th>Editorial</th>
                                    @*<th>Sala</th>*@
                                    @*<th>Activo</th>*@
                                    <th></th>
                                    @*<th>Volumen</th>
                    <th>Año de Edición</th>*@
                                    @*<th>Observaciones</th>*@
                                    <th></th>
                                    @*<th></th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarLibro llamada en el HomeControler*@

                            </tbody>
                        </table>



                    </div>
                    <div class="tab-pane fade" id="LibrosImage" role="tabpanel" aria-labelledby="vista2-tab">
                        @*<h2>Vista 2</h2>*@

                        <p></p>
                        @*la ottra seccion*@
                        <div id="contenedorLibro" class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">


                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>

    <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
        al momento de precionar el boton nuevo-->
    <div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
        @*Esto ultimo de data-bs-backdrop es para*@
        <div class="modal-dialog modal-xl">
            @*tamaño xl*@
        @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="exampleModalLabel">Libro</h5>
                <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                <input id="txtId" type="hidden" value="0" />@*Con el valor 0 se identifica si es un Libro nuevo a ingresar o es valor ya existe pero si es diferente a 0 significa que ya existe y vamos a editar*@

                <form id="contenedor" class="row">
                    @*Para visualizar la imagen*@
                    <div class="col-sm-3">
                        <div class="mb-2">
                            @*las ultimas instrucciones (clases) es para que sea de bloque y la imagen responsive*@
                            <img id="img_Libro" height="197" width="200" class="border rounded mx-auto d-block img-fluid" />
                        </div>
                        <div class="mb-2">
                            <input class="form-control" type="file" id="fileLibro" accept="image/png, image/jpg, image/jpeg" onchange="mostrarImagen(this)" />
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="mb-3">
                            <label for="txtCodigo" class="form-label">Código</label>
                            <input type="text" class="form-control" id="txtCodigo" name="codigo" autocomplete="off" />
                            @*<input id="txtid" class="form-control" type="text" value="0" />*@
                        </div>

                        @*<div class="mb-3">
                                <label for="txtTitulo" class="form-label">Título</label>
                                <input type="text" class="form-control" id="txtTitulo" name="titulo" autocomplete="off" />
                            </div>*@
                        <div class="mb-3">
                            <label for="txtTitulo" class="form-label">Título</label>
                            <textarea type="text" class="form-control" id="txtTitulo" name="titulo" style="height:125px;resize:none"></textarea>
                        </div>
                        @*<div class="mb-3">
                                <label for="txtUbicacion" class="form-label">Ubicación</label>
                                <input type="text" class="form-control" id="txtUbicacion" name="ubicacion" />
                            </div>*@
                        <div class="mb-3">
                            <label for="txtPaginas" class="form-label">Páginas</label>
                            <input type="number" class="form-control" id="txtPaginas" name="paginas" autocomplete="off" />
                        </div>
                    </div>

                    <div class="col-sm-3">

                        <div class="mb-3">
                            <label for="cbocategoria" class="form-label">Categoria</label>
                            <select id="cbocategoria" class="form-select" name="categoria">
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="cboeditorial" class="form-label">Editorial</label>
                            <select id="cboeditorial" class="form-select" name="editorial">
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="cbosala" class="form-label">Sala</label>
                            <select id="cbosala" class="form-select" name="sala">
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="txtEjemplares" class="form-label">Ejemplares</label>
                            <input type="number" class="form-control" id="txtEjemplares" name="ejemplares" autocomplete="off" />
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="mb-3">
                            <label for="txtAñoEdicion" class="form-label">Año de Edición</label>
                            <input type="text" class="form-control" id="txtAñoEdicion" name="añoedicion" autocomplete="off" />
                        </div>

                        <div class="mb-3">
                            <label for="txtVolumen" class="form-label">Volumen</label>
                            <input type="number" class="form-control" id="txtVolumen" name="volumen" autocomplete="off">
                        </div>
                        <div class="mb-3">
                            <label for="txtObservaciones" class="form-label">Observaciones</label>
                            <input type="text" class="form-control" id="txtObservaciones" name="observaciones" autocomplete="off" />
                        </div>
                        <div class="mb-3">
                            <label for="cboactivo" class="form-label">Activo</label>
                            <select id="cboactivo" class="form-select">
                                <option value="1">Si</option>
                                <option value="0">No</option>
                            </select>
                        </div>
                    </div>

                </form>
                <!--mensaje de alerta-->
                <div class="row mt-2">
                    <div class="col-12">
                        <div id="mensajeError" class="alert alert-danger" role="alert">
                            @*A simple danger alert—check it out!*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

</section>

@section scripts{

    <script>

        $(document).ready(function () {
            MostrarCategorias();
            MostrarLibros('T', 'T')//Anteriormente estaba en 0, pero al ser de codigo tipo string, se cambio a que fuera una T,
            //indicando Todos, de esta forma, no hay problema al mandar un ID y ya muestra todos los productos con solo iniciar la pagina
        })
        //function clickVista1() {
        //    $('#myTab a:first').tab('show');
        //}
        //function clickVista2() {
        //    $('#myTab a:last ').tab('show');
        //}
        $(document).on("click", "#vista1-tab", function () {
            //la accion a realizar
            $('#myTab a:first').tab('show');
        })
        $(document).on("click", "#vista2-tab", function () {
            //la accion a realizar
            $('#myTab a:last ').tab('show');
        })

        function MostrarCategorias() { /*muetsra todas las categorias dentro del Biblioteca*/

            jQuery.ajax({
                url:"@Url.Action("ListarCategorias", "Biblioteca")",
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    /*Pasamos de este check a la forma de abajo
                     * <div class="form-check">
                          <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                          <label class="form-check-label" for="flexRadioDefault1">
                            Default radio
                          </label>
                        </div>
                     */
                    $("#contenedorCategoria").LoadingOverlay("hide");
                    $("<div>").addClass("form-check").append(//Creacion de checkBox's

                        $("<input>").addClass("form-check-input").attr({ "type":"radio", "name":"categoria", "value":"T", "id":"cx", "checked":"checked" }),
                        $("<label>").addClass("form-check-label").text("Todos").attr({ "for":"cx"})
                    ).appendTo("#contenedorCategoria")//Implementado dentro del contenedorCategoria
                    //porque el metodo de listar categoria data viene del json
                    $.each(response.data, function (i, element) {//itera cada tipo de categoria
                        $("<div>").addClass("form-check").append(

                            $("<input>").addClass("form-check-input").attr({ "type": "radio", "name": "categoria", "value": element.IdCategoria, "id": "cx" + i}),
                            $("<label>").addClass("form-check-label").text(element.Descripcion).attr({ "for": "cx" + i })//Checar si vamos a cambiar el cx a c
                        ).appendTo("#contenedorCategoria")
                    })
                    MostrarEditorial();
                },
                beforeSend: function () {
                    $("#contenedorCategoria").LoadingOverlay("show");
                }
            })

        }
        function MostrarEditorial() { /*muestra la Editorial de acuerdo a la categoria seleccionada*/

            var _idCategoria = $("input[name=categoria]:checked").val()

            jQuery.ajax({
                url: "@Url.Action("ListarEditorialPorCategoria", "Biblioteca")",
                type: "POST", //si categoria envia 0 muestra todas las Editoriales
                data: JSON.stringify({ idCategoria: _idCategoria }),//Se envia el valor para el parametro tipo int a utilizar
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#contenedorEditorial").html("");//Antes de que vuelva a pintar todas las Editoriales, limpia todo el contenedor, de esta forma cada vez que actualicemos
                    //va a tener en inicio el contenedor vacio y pinta nuevamente todos los elementos de las Editoriales
                    //console.log(_idcategoria);
                    $("#contenedorEditorial").LoadingOverlay("hide");
                    $("<div>").addClass("form-check").append(

                        $("<input>").addClass("form-check-input").attr({ "type": "radio", "name": "editorial", "value": "T", "id": "mx", "checked": "checked" }),
                        $("<label>").addClass("form-check-label").text("Todos").attr({ "for": "mx" })
                    ).appendTo("#contenedorEditorial")
                    //porque el metodo de listar categoria data viene del json
                    $.each(response.data, function (i, element) {//itera cada tipo de categoria
                        $("<div>").addClass("form-check").append(

                            $("<input>").addClass("form-check-input").attr({ "type": "radio", "name": "editorial", "value": element.IdEditorial, "id": "m" + i }),
                            $("<label>").addClass("form-check-label").text(element.Descripcion).attr({ "for": "m" + i })
                        ).appendTo("#contenedorEditorial")
                    })
                },
                beforeSend: function () {
                    $("#contenedorEditorial").LoadingOverlay("show");
                }
            })
           // console.log(_idcategoria);

        }

        $(document).on("change", "input[name=categoria]", function () {
            //la accion a realizar
            MostrarEditorial();
        })

        function MostrarLibros(_idCategoria, _idEditorial) { /*muestra la Editorial de acuerdo a la categoria seleccionada*/

            jQuery.ajax({
                url: "@Url.Action("ListarLibros", "Biblioteca")",
                type: "POST", //si categoria envia 0 muestra todas las Editoriales
                //los parametros indicados deben ser igual a los nombrados en Biblioteca controller de su metodo
                data: JSON.stringify({ idCategoria: _idCategoria, idEditorial: _idEditorial }),//Se envia el valor para el parametro tipo int a utilizar
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#contenedorLibro").html("");
                    $("#contenedorLibro").LoadingOverlay("hide");

                    $.each(response.data, function (i, element) {//itera cada tipo de Libro
                        $("<div>").addClass("col mb-5").append(
                            $("<div>").addClass("card h-100").append(
                                $("<img>").addClass("card-img-top").attr({ "src": "data:image/" + element.Extension + ";base64," + element.Base64 }),
                                $("<div>").addClass("card-body p-4").append(
                                    $("<div>").addClass("text-center").append(
                                        $("<h5>").addClass("fw-bolder").text(element.Titulo),
                                        //"$" + element.Ejemplares.toFixed(2) + "Ejemplares disponibles" //para devolver solo dos decimales
                                        element.Ejemplares + " Ejemplares disponibles" //para devolver solo dos decimales

                                    )
                                ),
                                 $("<div>").addClass("card-footer p-4 pt-0 border-top-0 bg-transparent").append(

                                            $("<div>").addClass("d-grid gap-2").append(//Esto es para mejora del diseño y que los elementos tomen todo el ancho y que se alineen los elementos
                                                @if(Session["Lector"] != null){ //Si el usuario ha iniciado sesion, se muestra el boton  de agregar al carrito
                                                    @:$("<button>").addClass("btn btn-success mt-auto agregarcarrito").data("idlibro", element).text("Agregar a carrito"),//añadimos una propiedad interna el valor que va a tener sera el del elemento id

                                                }
                                                $("<a>").addClass("btn btn-dark mt-auto")//con margin-top de auto
                                                    .attr({ "href": "@Url.Action("DetalleLibro","Biblioteca")" + "?idLibro=" + element.IdLibro })//tiene el parametro idLibro
                                                    .text("Ver detalle")
                                            )

                                        )
                            )
                        ).appendTo("#contenedorLibro")
                    })
                },
                beforeSend: function () {
                    $("#contenedorLibro").LoadingOverlay("show");
                }
            })

        }

        $("#btnAplicarFiltro").click(function () {
            var _idCategoria = $("input[name=categoria]:checked").val()
            var _idEditorial = $("input[name=editorial]:checked").val()
            MostrarLibros(_idCategoria, _idEditorial)
        })

        $(document).on("click", "button.agregarcarrito", function () {//boton agregar carrito
            //console.log($(this).data("idlibro"))
            jQuery.ajax({
                url: "@Url.Action("AgregarCarrito", "Biblioteca")",
                type: "POST", //si categoria envia 0 muestra todas las marcas
                //los parametros indicados deben ser igual a los nombrados en Biblioteca controller de su metodo
                //el identificador idLibro debe ser igual al del metodo declaado en su parametro
                data: JSON.stringify({ idLibro: $(this).data("idlibro").IdLibro }),//Se envia el valor para el parametro tipo int a utilizar
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //data.respuesta es lo que retorna el metodo agregarCarrito
                    if (data.respuesta) {
                        MostrarCantidadCarrito();//Este metodo esta declarado en layout, en la master page, entoncees aunque no estemos en la misma vista
                        //pdemos acceder a este metodo porque layout es la master page y este index es un contenido del mismo (porque index de Biblioteca esta referenciado al layout)
                        swal({
                            title: "Agregado al carrito",
                            text: "¿Desea ir al carrito?",
                            type: "success",
                            showCancelButton: true,
                            confirmButtonClass: "btn-primary",
                            confirmButtonText: "Si",
                            cancelButtonText: "No",
                            closeOnConfirm: true
                        }, function () {
                            //redirige al carrito
                            window.location.href = '@Url.Action("Carrito","Biblioteca")'
                        })

                    } else {
                        //swal("", data.mensaje, "warning");//el mensaje se esta obteniendo de data
                        swal({
                            title: data.mensaje,
                            text: "¿Desea ir al carrito?",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn-primary",
                            confirmButtonText: "Si",
                            cancelButtonText: "No",
                            closeOnConfirm: true
                        }, function () {
                            //redirige al carrito
                            window.location.href = '@Url.Action("Carrito","Biblioteca")'
                        })
                    }
                }
            });
        })



        //----------------------------------------TABLA LIBROS ------------------------------
        var tabladata;
        var filaSeleccionada;/*Son variables globales para se usada por lo que este dentro */
        //el hastash significa que se refiere a un id, entonces llama o igual la variable a una tabla declarada
        //anteriormente en el html de arriba con id que se llama tabla
        tabladata = $("#tabla").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarTablaLibro", "Biblioteca")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Home cuando igualamos en el jsnundata
                 y el seguno valor es como se llama la columna*/
                { "data": "IdLibro" },
                /*{ "data": "Codigo" },*/
                { "data": "Titulo" },
                { "data": "Paginas" },
                {
                    "data": "oId_Categoria", "render": function (data) {
                        return data.Descripcion
                    }
                },
                {
                    "data": "oId_Editorial", "render": function (data) {
                        return data.Descripcion
                    }
                },
                //{
                //    "data": "oId_Sala", "render": function (data) {
                //        return data.Descripcion
                //    }
                //},
                //{
                //    "data": "Activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                //        if (valor) {/*Si el valor es verdadero*/
                //            return '<span class="badge bg-success">Si</span>'
                //        } else {
                //            return '<span class="badge bg-danger">No</span>'
                //        }
                //    }

                //},
                { "data": "Ejemplares" },
                //{ "data": "Volumen" },
                //{ "data": "AñoEdicion" },

              /*  { "data": "Observaciones" },*/
                //{
                //    "data": "IdLibro",
                //    "render": function (data, type, row, meta) {
                //        return '<button type="button" class="btn btn-dark">Ver detalle</button>';

                //    }
                //},
                {
                    "data": "IdLibro", "render": function (data, type, row, meta) {

                        //return $("<button>").addClass("btn btn-primary btn-editar btn-sm btn-block").append(
                        //    $("<i>").addClass("fas fa-pen")
                        //).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML
                        //    +
                        //    $("<button>").addClass("btn btn-danger btn-eliminar btn-sm btn-block ms-2").append(
                        //        $("<i>").addClass("fas fa-trash")
                        //    ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML;
                        return $("<div>").append(
                            $("<button>").addClass("btn btn-dark btn-editar btn-sm btn-block").append(
                                $("<i>").addClass("fas fa-info-circle")
                            ).attr({ "data-idlibro": JSON.stringify(row) })[0].outerHTML
                        )
                            .append(
                                $("<button>").addClass("btn btn-success agregarcarrito btn-sm btn-block ms-2").append(
                                    $("<i>").addClass("fas fa-shopping-cart")
                                ).attr({ "data-idlibro": JSON.stringify(row) })[0].outerHTML
                            )[0].outerHTML;

                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }

                //{/*Crea una columna por defecto*/
                //    /*El btn-promary es el diseño, el btn-sm es el mamaño*/
                //    "defaultContent": ' <button type="button" class="btn btn-primary btn-sm btn-editar"><i class="fas fa-pen"></i></button>' +
                //        '<button type="button" class="btn btn-danger btn-sm ms-2"><i class="fas fa-trash btn-eliminar"></i></button>',
                //    "orderable": false,/*Que no sea ordenada, porque solo contiene botones*/
                //    "searchable": false, /*Para que no haga la busqueda por estos botones de editar y eliminar, solo de las demas columnas*/
                //    "width": "90px"
                //}
            ],/*Propiedad o atributos van dentro de las comillas ""*/
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json"
            }

        });

        function mostrarImagen(input) {
            if (input.files) {/*Si tiene un archivo selecciondo continuamos*/

                var reader = new FileReader();

                reader.onload = function (e) {
                    /*Pinta en la etiqueta img_Libro con su src y las medidas correspondientes*/
                    $("#img_Libro").attr("src", e.target.result).width(200).height(197)
                }

                reader.readAsDataURL(input.files[0]);
            }

        }

        function abrirModal(json) /*json es el data del siguiente*/ {
            $("#txtId").val(0); /*Con el # llama con el id del elemento chtml*/
            $("#img_Libro").removeAttr("src");/*Limpia toda imagen que ya este mostrando la etiqueta de imagen antes*/
            $("#fileLibro").val("");
            $("#txtCodigo").val("");
            $("#txtTitulo").val("");
            /*("#txtUbicacion").val("");*/
            $("#txtPaginas").val("");
            $("#cbocategoria").val($("#cbocategoria option:first").val());/*Dentro de las opciones de cmbMarca siempre selecciona el primero*/
            $("#cboeditorial").val($("#cboeditorial option:first").val());
            $("#cbosala").val($("#cbosala option:first").val());

            $("#txtEjemplares").val("");
            $("#txtVolumen").val("");
            $("#txtAñoEdicion").val("");
            $("#txtObservaciones").val("");
            $("#cboactivo").val(1);

            $("#mensajeError").hide();
            /*Llamamos al form modal*/
            if (json != null) {/*Porque el metodo abrir modal puede abrirse con crear nuevo o con editar,
             * por eso esta linea*/
                $("#txtId").val(json.IdLibro);
                $("#txtCodigo").val(json.Codigo);
                $("#txtTitulo").val(json.Titulo);
                /* $("#txtUbicacion").val(json.Ubicacion);*/
                $("#txtPaginas").val(json.Paginas);
                $("#cbocategoria").val(json.oId_Categoria.IdCategoria);
                $("#cboeditorial").val(json.oId_Editorial.IdEditorial);
                $("#cbosala").val(json.oId_Sala.IdSala);
                $("#txtEjemplares").val(json.Ejemplares);
                $("#txtVolumen").val(json.Volumen);
                $("#txtAñoEdicion").val(json.AñoEdicion);
                $("#txtObservaciones").val(json.Observaciones);
                $("#cboactivo").val(json.Activo == true ? 1 : 0);/*Si es igual a true de el valor de uno
                 y si no es true de el valor de 0*/


                 jQuery.ajax({/*Para visualizar la imagen al dar editar*/
                    url: '@Url.Action("ImagenLibro", "Biblioteca")',
                    type: "POST",
                    data: JSON.stringify({ id: json.IdLibro }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        $("#img_Libro").LoadingOverlay("hide");

                        if (data.conversion) {/*Si es verdadero, si la conversion fue exitosa*/
                            $("#img_Libro").attr({ "src": "data:image/" + data.extension + ";base64," + data.textobase64 });
                        }
                    },
                    error: function (error) {
                        $("#img_Libro").LoadingOverlay("hide");

                        $("#mensajeError").show();
                        $("#mensajeError").text("Error al mostrar imagen");

                    },
                    beforeSend: function () {
                        $("#img_Libro").LoadingOverlay("show");
                    },
                });

            }

            $("#FormModal").modal("show");
        }
        /*--------------- Al dar clic en el boton de editar-------------------------------*/

        /*Estamos llamando a la tabla especificamente al tbody, todo ira en relacion a esa tabla*/
        $("#tabla tbody").on("click", '.btn-editar', function () {
            /*This es la misma tabla, se llama
             tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");
            var data = tabladata.row(filaSeleccionada).data();

            //console.log(data);/*Para visualizar en consola*/
            //abrirModal(data);
            //var json = $(this).data("informacion")
            //console.log(json);
            var json = $(this).data("idlibro")
            abrirModal(json)

        })
    </script>

}

