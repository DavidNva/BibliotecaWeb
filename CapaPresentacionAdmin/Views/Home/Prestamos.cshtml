
@{
    ViewBag.Title = "Prestamos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="#">Resumen</a></li>
    <li class="breadcrumb-item active">Prestamos</li>
</ol>
<div class="card">
    <div class="card-header">

        <i class="fas fa-landmark me-1"></i>Lista de Prestamos
    </div>
    <div class="card-body">
        @*boostrap es como manejar una hoja en excel*@
        <div class="row">
            <div class="col-12">
                @*numero de filas*@
                <button type="button" class="btn btn-success" onclick="abrirModal()">Crear Nuevo</button>
            </div>
        </div>
        <hr /> @*el id es para identificar la tabla*@
        <table id="tabla" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>Libro</th>
                    <th>Lector</th> @*listaremos como tipo persona o como listabamos categoria*@
                    <th>Libros Prestados</th>
                    <th>Fecha Prestamo</th>
                    <th>Fecha Devolucion</th>
                    <th>Dias de Prestamo</th>
                    <th>Observaciones</th>
                    <th>Activo</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarPrestamo llamada en el HomeControler*@

            </tbody>
        </table>

    </div>

</div>

<!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    @*Esto ultimo de data-bs-backdrop es para*@
    <div class="modal-dialog">
        @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="exampleModalLabel">Prestamo</h5>
                <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="contenedor">
                @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                <input id="txtId" type="hidden" value="0" />@*Con el valor 0 se identifica si es un Prestamo nuevo a ingresar o es valor ya existe
                    pero si es diferente a 0 significa que ya existe y vamos a editar*@
            <div class="row g-2">

                <div class="col-sm-6">
                    <label class="form-label">Libro</label>
                    <select id="cmbLibro" class="form-select">
                    </select>
                </div>

                <div class="col-sm-6">
                    <label class="form-label">Ejemplar Disponible</label>
                    <select id="cmbEjemplar" class="form-select">
                    </select>
                </div>

                <div class="col-sm-12">
                    <label class="form-label">Lector</label>
                    <select id="cmbLector" class="form-select">
                    </select>
                </div>
                <div class="col-sm-6">
                    <label for="txtTotalLibros" class="form-label">Libros Prestados</label>
                    <input type="number" class="form-control" id="txtTotalLibros" autocomplete="off">
                </div>
                <div class="col-sm-6">
                    <label for="txtFechaPrestamo" class="form-label">Fecha Prestamo</label>
                    <input type="text" class="form-control" id="txtFechaPrestamo" autocomplete="off">
                </div>
                <div class="col-sm-6">
                    <label for="txtFechaDevolucion" class="form-label">Fecha Devolución</label>
                    <input type="text" class="form-control" id="txtFechaDevolucion" autocomplete="off">
                </div>
                <div class="col-sm-6">
                    <label for="txtDiasPrestamo" class="form-label">Dias de Prestamo</label>
                    <input type="number" class="form-control" id="txtDiasPrestamo" autocomplete="off">
                </div>

                @*<div class="col-sm-6">
            <label for="txtTipo" class="form-label">Tipo</label>
            <input type="text" class="form-control" id="txtTipo" autocomplete="off">
        </div>*@

                <div class="col-sm-6">
                    <label for="cmbActivo" class="form-label">Activo</label>
                    <select id="cmbActivo" class="form-select">
                        <option value="1">Si</option>
                        <option value="0">No</option>
                    </select>
                </div>
                <div class="col-sm-12">
                    <label for="txtObservaciones" class="form-label">Observaciones</label>
                    <input type="text" class="form-control" id="txtObservaciones" autocomplete="off">
                </div>
            </div>
                <!--mensaje de alerta-->
                <div class="row mt-2">
                    <div class="col-12">
                        <div id="mensajeError" class="alert alert-danger" role="alert">
                            A simple danger alert—check it out!
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        //BIEN
        var tabladata;
        var filaSeleccionada;/*Son variables globales para se usada por lo que este dentro */

        //el hastash significa que se refiere a un id, entonces llama o igual la variable a una tabla declarada
        //anteriormente en el html de arriba con id que se llama tabla
        tabladata = $("#tabla").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarPrestamosCompleto", "Home")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Home cuando igualamos en el jsnundata
                 y el seguno valor es como se llama la columna*/
                {
                    "data": "oId_Libro", "render": function (data) {/*El render permite obtener el valor de la columna*/
                        return data.Titulo
                    }
                },
                {
                    "data": "oId_Lector", "render": function (data) {/*El render permite obtener el valor de la columna*/
                        return data.NombreCompletoLector
                    }
                },
                { "data": "TotalLibro" },
                { "data": "FechaPrestamo" },
                { "data": "FechaDevolucion" },
                { "data": "DiasDePrestamo" },

               /* { "data": "Tipo" },*/
                { "data": "Observaciones" },

                {
                    "data": "Activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                {
                    "data": "IdPrestamo", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editar btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminar btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacion": JSON.stringify(row) })[0].outerHTML;

                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }
                //{/*Crea una columna por defecto*/
                //    /*El btn-promary es el diseño, el btn-sm es el mamaño*/
                //    "defaultContent": ' <button type="button" class="btn btn-primary btn-sm btn-editar"><i class="fas fa-pen"></i></button>' +
                //        '<button type="button" class="btn btn-danger btn-sm ms-2"><i class="fas fa-trash btn-eliminar"></i></button>',
                //    "orderable": false,/*Que no sea ordenada, porque solo contiene botones*/
                //    "searchable": false, /*Para que no haga la busqueda por estos botones de editar y eliminar, solo de las demas columnas*/
                //    "width": "90px"
                //}
            ],/*Propiedad o atributos van dentro de las comillas ""*/
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json"
            }

        });
        /* ahora el ajax paa listar las Categorias en el cmbCategoria*/
          @*jQuery.ajax({
            url: '@Url.Action("ListarTipoPersona", "Mantenedor")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cmbTipoPersona");
                $.each(data.data, function (index, item) {

                    $("<option>").attr({ "value": item.IdTipoPersona }).text(item.Descripcion).appendTo("#cmbTipoPersona");
                })
            },
            error: function (error) {
                console.log(error)
            }
          });*@



          jQuery.ajax({
            url: '@Url.Action("ListarLectorParaPrestamo", "Home")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

               //$("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cbocategoria");
                $("#cmbLector").append($("<option selected>").val("").text("Seleccionar"));
                $.each(data.data, function (index, item) {
                    //El valor de item es el declarado en EN_Lector, la capa Entidad
                    $("<option>").attr({ "value": item.IdLector }).text(item.NombreCompletoLector).appendTo("#cmbLector");
                })
                //dropdownParent: $('#FormModal')
                $("#cmbLector").select2({ placeholder: "Seleccionar", width: "100%", dropdownParent: $('#contenedor') });
                   /* .css("z-index", "1600");*/

            },
            error: function (error) {
                console.log(error)
              }
          });


          jQuery.ajax({
            url: '@Url.Action("ListarLibrosParaPrestamo", "Home")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

               //$("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cbocategoria");
                $("#cmbLibro").append($("<option selected>").val("").text("Seleccionar"));
                $.each(data.data, function (index, item) {
                    //El valor de item es el declarado en EN_Lector, la capa Entidad
                    $("<option>").attr({ "value": item.IdLibro }).text(item.Titulo).appendTo("#cmbLibro");
                })
                //dropdownParent: $('#FormModal')
                $("#cmbLibro").select2({ placeholder: "Seleccionar", width: "100%", dropdownParent: $('#contenedor') });
                   /* .css("z-index", "1600");*/
                ListarEjemplar();
            },
            error: function (error) {
                console.log(error)
              }
          });

          $("#cmbLibro").on("change", function () {
            ListarEjemplar();//Cada vez que cambia lista nuevamente las Ejemplars
        })

        function ListarEjemplar() {//Ejemplar = Municipio
            $("#cmbEjemplar").html("")//Para poder iniciar desde 0 lo limpiamos de esta forma
            //Aqui se colocan los atributos de html y opciones de valor, text, etc
            //$("<option>").attr({ "value": "00", "disabled": "disabled", "selected": "true" }).text("Seleccionar").appendTo("#cmbEjemplar")

            jQuery.ajax({
                url: '@Url.Action("ObtenerEjemplarPorLibro", "Home")',
                type: "POST",
                data: JSON.stringify({ IdLibro: $("#cmbLibro option:selected").val() }),//pasamos los parametros que necesita este metodo
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    if (data.lista != null) {
                        $.each(data.lista, function (i, item) {
                            $("<option>").attr({"value": item.IdEjemplarLibro }).text("Ejemplar: " + item.IdEjemplarLibro).appendTo("#cmbEjemplar")
                        })
                    }
                }
            })
        }
        //.attr({"type":"hidden"});
        function abrirModal(json) /*json es el data del siguiente*/ {

            $("#txtId").val(0);
            $("#txtTotalLibros").val(1);
            $("#txtFechaPrestamo").val("");
            $("#txtFechaDevolucion").val("");
            $("#txtDiasPrestamo").val(7);
            $("#txtObservaciones").val("");
            $("#cmbLector").append($("<option selected>").val("").text("Seleccionar"));
            $("#cmbLibro").append($("<option selected>").val("").text("Seleccionar"));
            $("#cmbEjemplar").html("")
            $("<option>").attr({ "value": "00", "disabled": "disabled", "selected": "true" }).text("Seleccionar").appendTo("#cmbEjemplar")
            $("#cmbEjemplar").val($("#cmbEjemplar option:first").val());
            $("#cmbActivo").val(1);

            $("#txtFechaPrestamo").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker('setDate', new Date())
            $("#txtFechaDevolucion").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker('setDate', new Date())
            //$("#txtFechaDevolucion").val("").attr({ "disabled": "disabled" });


            $("#mensajeError").hide();
            /*Llamamos al form modal*/
            if (json != null) {/*Porque el metodo abrir modal puede abrirse con crear nuevo o con editar,
             * por eso esta linea*/
                $("#txtId").val(json.IdPrestamo);/*Traerá el codigo pero no lo mostrará al Prestamo*/
                $("#cmbLector").val(json.oId_Lector.IdLector).trigger('change');
                $("#cmbLibro").val(json.oId_Libro.IdLibro).trigger('change');
                $("#txtTotalLibros").val(json.TotalLibro); /*El json o data, trae una propieadad llamada nombres*/
                $("#cmbActivo").val(json.Activo == true ? 1 : 0);/*Si es igual a true de el valor de uno
                 y si no es true de el valor de 0*/
                $("#txtFechaPrestamo").val(json.FechaPrestamo);//El dato despues de json. se refiere al identificador dado en Capa Entidad EN_Prestamo, tal cual se deben de escribirs
                $("#txtFechaDevolucion").val(json.FechaDevolucion);

                $("#txtFechaPrestamo").datepicker({ dateFormat: 'dd/mm/yy' })
                $("#txtFechaDevolucion").datepicker({ dateFormat: 'dd/mm/yy' })

                $("#txtDiasPrestamo").val(json.DiasDePrestamo);
                $("#txtObservaciones").val(json.Observaciones);
                //$("#cmbLector").val(json.oId_Lector.IdLector);
               
            }

            $("#FormModal").modal("show");
        }
        /*--------------- Al dar clic en el boton de editar-------------------------------*/

        /*Estamos llamando a la tabla especificamente al tbody, todo ira en relacion a esa tabla*/
        $("#tabla tbody").on("click", '.btn-editar', function () {
            /*This es la misma tabla, se llama
             tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");
            var data = tabladata.row(filaSeleccionada).data();

            //console.log(data);/*Para visualizar en consola*/
            //abrirModal(data);
            var json = $(this).data("informacion")
            //console.log(json);
            abrirModal(json)

        })
        /*Tambien lo podemos hacer de esta forma*/
        //$(document).on('click', '.btn-editar', function (event) {
        //    var json = $(this).data("informacion")

        //    abrirModal(json)
        //});

        //El boton aplica 3 acciones a la base de datos
        //1. Elimina el prestamo con su id y a su vez los detallePrestamos que tenga
        //2. Actualiza el ejemplar pasando a activo = 1, reactiva el ejemplar que estaba en prestamo
        //3. Acutaliza: Aumentando 1 ejemplar a la cantidad de ejemplares en la tabla libro ya que se reactiva un 
        //ejemplar,entonces se suma de nuevo ese ejemplar al total de stock o cantidad de ejemplares de libro

        $("#tabla tbody").on("click", '.btn-eliminar', function () {

            //var Prestamoseleccionado = $(this).closest("tr");
            //console.log(Prestamoseleccionado)

            var json = $(this).data("informacion")
            //console.log(json);
            //var idPrestamo = json.IdPrestamo
            //console.log(json.IdPrestamo);
            //console.log(data);
            //if (typeof json !== "undefined" && json !== null) {
            //    // Ahora puedes acceder a las propiedades de data de forma segura
            //    var id = json.IdPrestamo;
            //    // resto del código aquí
            //} else {
            //    console.log("La variable data es undefined o null");
            //}
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar el Prestamo?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {
                jQuery.ajax({
                    url: '@Url.Action("EliminarPrestamo", "Home")',
                    type: "POST",
                    data: JSON.stringify({ id: json.IdPrestamo, idEjemplarLibro: json.oId_Ejemplar.IdEjemplarLibro, idLibro: json.oId_Libro.IdLibro }),/*Paso de valores*/
                    /*el stringfy lo convierte a texto*/
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar Prestamo
                     * hecho en homeController*/
                        //ELIMINAR Prestamo

                        if (data.resultado) { /*si el resultado es verdadera)*/
                            //tabladata.row(Prestamoseleccionado).remove().draw();
                            tabladata.ajax.reload();
                        }else {
                            swal("No se pudo eliminar", data.mensaje, "error")
                        }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                    },
                    error: function (error) {
                        console.log(error)
                    }

                });
            });

            //console.log(data);


        })

        @*$("#tabla tbody").on("click", '.btn-eliminar', function () {

            var Prestamoseleccionado = $(this).closest("tr");
            var data = tabladata.row(Prestamoseleccionado).data();
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar el Prestamo?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {
                jQuery.ajax({
                    url: '@Url.Action("EliminarPrestamo", "Home")',
                    type: "POST",
                    data: JSON.stringify({ id: data.IdPrestamo }),/*Paso de valores*/
                    /*el stringfy lo convierte a texto*/
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar Prestamo
                     * hecho en homeController*/
                        //ELIMINAR Prestamo

                        if (data.resultado) { /*si el resultado es verdadera)*/
                            tabladata.row(Prestamoseleccionado).remove().draw();
                        }else {
                            swal("No se pudo eliminar", data.mensaje, "error")
                        }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                    },
                    error: function (error) {
                        console.log(error)
                    }

                });
            });

            //console.log(data);


        })*@

        function Guardar() {
            var Prestamo = {
                IdPrestamo: $("#txtId").val(), /*Los dos puntos de la condicion es "si es diferente es:"
                 el signo de interrogacion es un entonces
                 leyendo la sentencia de abajo seria, si el valor es igual a 1, entonces es true (verdadero)
                 pero si es diferentes es falso*/
                oId_Lector: {
                    IdLector: $("#cmbLector option:selected").val(),
                    NombreCompletoLector: $("#cmbLector option:selected").text()
                },
                oId_Libro: {
                    IdLibro: $("#cmbLibro option:selected").val(),
                    Titulo: $("#cmbLibro option:selected").text()
                },
                
                TotalLibro: $("#txtTotalLibros").val(),

                /*El punto val sirve para obtener un valor y para establecer un valor*/
                FechaPrestamo: $("#txtFechaPrestamo").val(),
                FechaDevolucion: $("#txtFechaDevolucion").val(),
                DiasDePrestamo: $("#txtDiasPrestamo").val(),
               
               
                Observaciones: $("#txtObservaciones").val(),
                Activo: $("#cmbActivo").val() == 1 ? true : false, /*Para saber si se esta seleccionado un Si (Si = 0)
                // * o un no (No = 0*/
                
            }
            jQuery.ajax({/*Llama al metodo de guardar Prestamo, que dependiendo de la accion va a crear nuevo
             o a editar, tomando en cuenta que se basa en que si el id = 0 o no*/
                url: '@Url.Action("GuardarPrestamo", "Home")',
                type: "POST",
                data: JSON.stringify({ objeto: Prestamo}),/*Paso de valores
                 el stringfy lo convierte a texto*/
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $(".modal-body").LoadingOverlay("hide");
                    //Prestamo NUEVO
                    if (Prestamo.IdPrestamo == 0) { /*Es decir, si el id es 0 en inicio (el valor es 0 inicialmente) significa que es
                        un Prestamo nuevo, por lo que se ha dado dando clic con el boton de crear*/
                        /*alert("Crear Prestamo")*/

                        if (data.resultado != 0) {
                            Prestamo.IdPrestamo = data.resultado;
                            tabladata.row.add(Prestamo).draw(false);

                            $("#FormModal").modal("hide");
                        } else {

                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    }
                    //Prestamo Editar
                    else {
                        /* alert("Editar Prestamo")*/
                        /*Pero si el id es diferente de 0, es decir ya existe, entonces se esta editando
                         a un Prestamo, por lo que indica que se ha dado clic en el boton de editar, eso lo comprobamos
                         con los alert comentados*/

                        if (data.resultado) {
                            tabladata.ajax.reload();
                            /*tabladata.row(filaSeleccionada).data(Prestamo).draw(false);*/
                            filaSeleccionada = null;
                            $("#FormModal").modal("hide");

                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    }
                },
                error: function (error) {
                    $(".modal-body").LoadingOverlay("hide");
                    $("#mensajeError").text("Error Ajax");
                    $("#mensajeError").show();
                },
                beforeSend: function () {
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,
                        text: "Cargando...",
                        size: 14
                    });
                }
            });

        }
    </script>
}